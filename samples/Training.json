{
	"Shader": {
		"ver": "0.1",
		"info": {
			"id": "llXGDs",
			"date": "1426130307",
			"viewed": 130,
		 	"name": "Training",
		 	"username": "Vil",
		 	"description": "Inspired by some similar landscape shaders I've seen here. Trying to make this as small as possible, but 280 chars still seems a long way off!",
		 	"likes": 3,
		 	"published": 3,
		 	"flags": 0,
		 	"tags": [
		 		"2d"
		 	],
		 	"hasliked": 0
		}, 
		"renderpass": [
		 	{
		 		"inputs": [],
		 		"outputs":[],
		 		"code": "void mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n  vec2 p = fragCoord.xy \/ iResolution.xy;\n  float x = fract((p.x + iTime) * .007) * 100.,   \/\/ landscape is a function of this x value\n      \td = .5 - length(p - .5),                        \/\/ distance from ellipse, for the vignette\n      \tr = .3,                                        \t\/\/ fade-out width for the vignette\n      \th = .7 + sin(x) * .1 + sin(x * 21.1 + 3.) * .03 + cos(x * 49.8 + 1.3) * .01, \/\/ height of the mountains\n        g = .3 + fract(sin(x * 12.9) * 43758.5) * .05,\t\/\/ height of the grass\n        c = pow(p.y + .2, .8); \t\t\t\t\t\t\t\t\/\/ base color\n  if (p.y < h)\n    c -= .3; \/\/ color the mountains\n  if (p.y < g)\n    c -= .2; \/\/ color the grass\n  fragColor = c * smoothstep(0., r, d + r) * vec4(.3, .4, 1, 1);\n}\n",
		 		"name": "Image",
		 		"description": "",
		 		"type": "image"
		 	}
		]
	}
}